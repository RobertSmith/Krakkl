@using System.Collections.Generic
@using System.Threading.Tasks
@using Krakkl.Query
@using Microsoft.AspNet.Mvc.Rendering
@model BookModel

<link href="~/css/jasny-bootstrap.min.css" rel="stylesheet" />

@{
    ViewBag.Title = "Edit Book";

    var genreList = ViewBag.Genres as List<GenreObject>;
    var languages = ViewBag.Languages as Dictionary<string, string>;

    List<SelectListItem> languageList = languages.Select(language => new SelectListItem { Text = language.Value, Value = language.Key, Selected = language.Key == Model.LanguageKey }).ToList();

    object disabledAttributesPublic = new { disabled = "disabled", @readonly = "readonly" };
    object disabledAttributesComplete = new { disabled = "disabled", @readonly = "readonly" };

    if (!Model.Public)
    {
        disabledAttributesPublic = new { };
    }

    if (!Model.Complete)
    {
        disabledAttributesComplete = new { };
    }

    if (!string.IsNullOrEmpty(ViewBag.StatusMessage))
    {
        <p class="alert alert-success">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            @ViewBag.StatusMessage
        </p>
    }
}

<div class="row">
    <div class="col-md-12">
        <h3>@Model.Title<button class="btn btn-danger pull-right" onclick="window.location = '/Account/Desk'; return false;">Cancel</button></h3>
    </div>
</div>

@Html.Partial("_BookEditTabs")

@using (Html.BeginForm("BookMeta", "Account", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <div class="row">
        <fieldset>
            <div class="col-md-6">
                @Html.HiddenFor(m => m.Key)
                <div class="form-group">
                    <label for="title"><i class="glyphicon glyphicon-asterisk" data-toggle="tooltip" data-placement="top" title data-original-title="Required field"></i> Title</label>
                    <input type="text" class="form-control" id="title" name="title" value="@Model.Title"/>
                </div>
                <div class="form-group">
                    <label for="subTitle">Sub Title</label>
                    <input type="text" class="form-control" id="subTitle" name="subTitle" value="@Model.SubTitle"/>
                </div>
                <div class="form-group">
                    <label for="seriesTitle">Series Title</label>
                    <input type="text" class="form-control" id="seriesTitle" name="seriesTitle" value="@Model.SeriesTitle"/>
                </div>
                <div class="form-group">
                    <label for="seriesVolume">Series Volume</label>
                    <input type="text" class="form-control" id="seriesVolume" name="seriesVolume" value="@Model.SeriesVolume"/>
                </div>
                <div class="form-group">
                    <label for="genreKey">Genre</label>
                    <select id="genreKey" name="genreKey" class="form-control">
                        @{
                            foreach (var genre in genreList.OrderByDescending(x => x.IsFiction).ThenBy(x => x.Name))
                            {
                                if (genre.IsFiction)
                                {
                                    if (genre.Key == Model.GenreKey)
                                    {
                                        <option value="@genre.Key" selected="selected">(fiction) @genre.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@genre.Key">(fiction) @genre.Name</option>
                                    }
                                }
                                else
                                {
                                    if (genre.Key == Model.GenreKey)
                                    {
                                        <option value="@genre.Key" selected="selected">@genre.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@genre.Key">@genre.Name</option>
                                    }
                                }
                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label for="LanguageKey">Language <i class="glyphicon glyphicon-question-sign" data-toggle="tooltip" data-placement="right" title data-original-title="The language you will write your book in, also sets the language of the text editor."></i></label><br/>
                    @Html.DropDownListFor(m => m.LanguageKey, languageList, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-6">
                <label>Cover Art</label><br />
                <div class="fileinput fileinput-new" data-provides="fileinput">
                    <div class="fileinput-new thumbnail" style="width: 400px; height: 400px;">
                        <img src="http://www.placehold.it/400x400/EFEFEF/AAAAAA&text=no+image" />
                    </div>
                    <div class="fileinput-preview fileinput-exists thumbnail" style="max-width: 400px; max-height: 400px; line-height: 20px;"></div>
                    <div>
                        <span class="btn btn-primary btn-file">
                            <span class="fileinput-new">Upload Cover Art...</span>
                            <span class="fileinput-exists">Change</span>
                            <input id="CoverArt" name="CoverArt" type="file" accept="image/*" />
                        </span>
                        <a href="#" class="btn fileinput-exists" data-dismiss="fileinput">Remove</a>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
    <div class="row" style="margin-bottom: 10px;">
        <div class="col-md-12">
            <label for="Synopsis">Synopsis <i class="icon-question-sign" data-toggle="tooltip" data-placement="right" title data-original-title="A brief summary of your book."></i></label>
            @Html.TextAreaFor(m => m.Synopsis, new {style = "width: 1150px;", @rows = 5})
            <label class="checkbox inline" for="Public">@Html.CheckBoxFor(m => m.Public, disabledAttributesPublic) Public <i class="fa fa-question-circle" data-toggle="tooltip" data-placement="right" title data-original-title="Check public to allow others to read your work. This is permanent."></i></label>
            <label class="checkbox inline" for="Complete">@Html.CheckBoxFor(m => m.Complete, disabledAttributesComplete) Complete <i class="fa fa-question-circle" data-toggle="tooltip" data-placement="right" title data-original-title="Check complete to indicate the work is in its final state, and will no longer be altered. It also allows readers to start leaving reviews. This is permanent."></i></label>
            <label class="checkbox inline" for="Abandoned">@Html.CheckBoxFor(m => m.Abandoned) Abandoned <i class="fa fa-question-circle" data-toggle="tooltip" data-placement="right" title data-original-title="Check abandoned to to indicate the work will not be finished. This is reversable."></i></label>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <button class="btn btn-success pull-left">Save</button>
            <button class="btn btn-danger pull-right" onclick="window.location = '/Account/Desk'; return false;">Cancel</button>
        </div>
    </div>
}

<script src="~/lib/jquery/jquery.js"></script>
<script src="~/lib/ckeditor/ckeditor.js"></script>
<script src="~/js/jasny-bootstrap.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $(".glyphicon-asterisk").tooltip();
        $(".glyphicon-question-sign").tooltip();

        CKEDITOR.replace('Synopsis',
            {
                toolbar: 'Basic',
                language: $('#LanguageKey').val(),
                filebrowserImageBrowseUrl: '/Image/Browser?bookId=@Model.Key',
                filebrowserImageUploadUrl: '/Image/Upload?bookId=@Model.Key',
                filebrowserImageWindowWidth: '680',
                filebrowserImageWindowHeight: '680'
            });

        $("#LanguageKey").change(function (e) {
            CKEDITOR.instances.Synopsis.destroy();
            CKEDITOR.replace('Synopsis', { toolbar: 'Basic', language: $('#LanguageKey').val() });
        });

        $('.fileinput').fileinput({ uploadtype: 'image' });
    });
</script>
